(handleunknown deny)
(class cl01 (p01a p01b))
(class cl02 ())
(class cl03 (p03a p03b))
(class cl04 (p04a p04b))
(class clx (ioctl))
(classorder (cl01 cl02 cl03 cl04 clx))
(classcommon cl01 cm01)
(classcommon cl02 cm02)
(common cm01 (p11a p11b))
(common cm02 (p22a p22b))
(sid kernel)
(sid security)
(sid unlabeled)
(sidorder (kernel security unlabeled))
(defaultuser cl01 source)
(defaultuser cl02 source)
(defaultuser cl03 source)
(defaultrole cl01 source)
(defaulttype cl02 target)
(defaultrange cl03 target low-high)
(mls true)
(sensitivity s01)
(sensitivity s02)
(sensitivity s03)
(sensitivityorder (s01 s02 s03))
(category c01)
(category c02)
(category c03)
(categoryorder (c01 c02 c03))
(sensitivitycategory s02 (c01 c03))
(sensitivitycategory s03 ((range c01 c03)))
(mlsconstrain (cl01 (p01a)) (and (dom h1 h2) (domby l1 h1)))
(mlsvalidatetrans cl02 (or (eq l1 l2) (eq t3 tpo)))
(mlsvalidatetrans cl02 (or (eq l1 l2) (incomp l1 l2)))
(mlsvalidatetrans cl02 (or (eq u1 u2) (eq t3 tpo)))
(policycap network_peer_controls)
(policycap open_perms)
(typeattribute at02)
(boolean b01 false)
(boolean b02 true)
(type tp01)
(type tp02)
(type tp03c)
(type tp03p)
(type tp04)
(type tpo)
(type tpr1)
(type tpr2)
(type tpr3)
(type tpr4)
(type tpr5)
(type tpx)
(typebounds tp03p tp03c)
(typeattributeset at02 (tp01 tp02))
(typepermissive tp01)
(allow at02 tpo (cl02 (p22b)))
(allow at02 tpr1 (cl01 (p11a p01a p01b)))
(allow at02 tpr3 (cl01 (p11a p01a p01b)))
(allow tp01 self (cl01 (p11a p11b p01a p01b)))
(allow tp01 tpo (cl02 (p22a)))
(allow tp01 tpr1 (cl01 (p11b)))
(allow tp03c tpo (cl03 (p03a)))
(allow tp03p tpo (cl03 (p03a p03b)))
(allow tp04 tpx (clx (ioctl)))
(auditallow tp01 tpo (cl01 (p01a)))
(dontaudit at02 tpr2 (cl01 (p11a p01a p01b)))
(dontaudit at02 tpr4 (cl01 (p11a p01a p01b)))
(dontaudit tp01 tpo (cl01 (p01b)))
(dontaudit tp01 tpr2 (cl01 (p11b)))
(allowx tp04 tpx (ioctl clx ((0x1234))))
(auditallowx tp04 tpx (ioctl clx ((0x9911))))
(dontauditx tp04 tpx (ioctl clx ((0x9922))))
(typetransition tp01 tpo cl01 tp02)
(typemember tp01 tpo cl02 tp02)
(typechange tp01 tpo cl03 tp02)
(typetransition tp01 tpo cl04 file01 tp02)
(rangetransition tp01 tpo cl01 ((s02) (s02)))
(rangetransition tp01 tpo cl02 ((s02) (s03 (c01 c02))))
(booleanif b01
    (true
        (allow tp01 tpr3 (cl01 (p11b)))
        (allow tp01 tpr5 (cl01 (p11a p11b p01a p01b)))
        (allow tp02 tpr5 (cl01 (p11a p01a)))
        (dontaudit tp01 tpr4 (cl01 (p11b)))
    )
    (false
        (allow at02 tpr5 (cl01 (p11a p01a p01b)))
    )
)
(role auditadm_r)
(role object_r)
(role rl01)
(role rl02)
(role rl03c)
(role rl03p)
(role secadm_r)
(roletype rl01 tp01)
(roletype rl01 tp02)
(roletype rl02 tp02)
(roletype rl03c tp03c)
(roletype rl03p tp03p)
(roletype object_r tp01)
(roletype object_r tp02)
(roletype object_r tp03c)
(roletype object_r tp03p)
(roletype object_r tp04)
(roletype object_r tpo)
(roletype object_r tpr1)
(roletype object_r tpr2)
(roletype object_r tpr3)
(roletype object_r tpr4)
(roletype object_r tpr5)
(roletype object_r tpx)
(roletransition rl01 tpo cl01 rl02)
(roleallow rl01 rl02)
(user us01)
(userrole us01 object_r)
(userrole us01 rl01)
(userlevel us01 (s01))
(userrange us01 ((s01) (s03 ((range c01 c03)))))
(constrain (cl01 (p01b)) (not (and (eq t1 tpo) (neq u1 u2))))
(validatetrans cl02 (or (eq u1 u2) (eq r1 r2)))
(sidcontext kernel (us01 rl01 tp01 ((s01) (s03 ((range c01 c03))))))
(sidcontext security (us01 rl01 tp01 ((s01) (s02))))
(sidcontext unlabeled (us01 rl01 tp01 ((s02 (c01 c03)) (s03 (c01 c03)))))
(fsuse xattr fs01 (us01 rl01 tp01 ((s01) (s01))))
(fsuse trans fs03 (us01 rl01 tp01 ((s01) (s01))))
(fsuse task fs02 (us01 rl01 tp01 ((s01) (s01))))
(genfscon fs04 / (us01 rl01 tp01 ((s01) (s01))))
(portcon udp 1000 (us01 rl01 tp01 ((s01) (s01))))
(portcon tcp 2000 (us01 rl01 tp01 ((s01) (s01))))
(portcon dccp 3000 (us01 rl01 tp01 ((s01) (s01))))
(portcon udp (1001 1009) (us01 rl01 tp01 ((s01) (s01))))
(portcon tcp (2001 2009) (us01 rl01 tp01 ((s01) (s01))))
(portcon dccp (3001 3009) (us01 rl01 tp01 ((s01) (s01))))
(netifcon if01 (us01 rl01 tp01 ((s01) (s01))) (us01 rl01 tp02 ((s01) (s01))))
(nodecon (10.0.0.1) (255.255.255.0) (us01 rl01 tp01 ((s01) (s01))))
(nodecon (fc00::1) (fc00::ffff) (us01 rl01 tp01 ((s01) (s01))))
